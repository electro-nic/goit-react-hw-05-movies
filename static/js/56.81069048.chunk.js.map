{"version":3,"file":"static/js/56.81069048.chunk.js","mappings":"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","sources":["components/fetch.jsx","components/pages/SingleMoviePage/SingleMovieStyled.js","components/pages/SingleMoviePage/SingleMoviePage.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst myAPIkey = 'd53b112a09092033b6a356e57b991833';\n\nconst fetchRequest = async (page) => {\n    const response = await axios.get(`${BASE_URL}trending/all/day?api_key=${myAPIkey}&page=${page}`);\n    return response.data;\n}\n\nconst fetchOneMovie = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${myAPIkey}&language=en-US`);\n    return response.data;\n\n}\n\nconst fetchMovieByName = async (searchName, currentPage) => {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${myAPIkey}&language=en-US&page=1&include_adult=false&query=${searchName}&page=${currentPage}`);\n    return response.data;\n}\n\nconst fetchActorsMovie = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${myAPIkey}&language=en-US`);\n    return response.data;\n}\n\nconst fetchReviews = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${myAPIkey}&language=en-US&page=1`);\n    return response.data;\n}\n\nexport { fetchRequest, fetchOneMovie, fetchMovieByName, fetchActorsMovie, fetchReviews };\n\n","import styled from 'styled-components';\n\nconst WrapperDetailsInfMovie = styled.div`\n    margin-top: 20px;\n    margin-left: 10px;\n    display: flex;\n    justify-content: center;\n`;\nconst BtnGoBack = styled.button`\n    margin: 10px 10px;\n    background-color: #F4A460;\n    border-radius: 12px;\n    border: transparent;\n    color: #000;\n    cursor: pointer;\n    font-weight: bold;\n    padding: 5px 10px;\n    text-align: center;\n    transition: 200ms;\n    width: 100px;\n\n    &:hover,\n    &:focus {\n        outline: 0;\n        border-color: #808080;\n        background: #BC8F8F;\n        box-shadow: 0 0 0 2px rgba(0,0,0,.2), 0 3px 8px 0 rgba(0,0,0,.15);\n}`;\n\nconst ContainerInfMovie = styled.div`\n    margin-left: 10px;\n`;\nconst YearReleseMovie = styled.span`\n    margin-left: 5px;\n    font-weight: bold;\n    font-size: 22px;\n`;\nconst TitleHeadDetails = styled.h3`\n    padding: 0;\n    margin: 0;\n`;\nconst TitleWrapper = styled.div`\n    display:flex;\n    align-items: baseline;\n`;\n\nconst GenresWrapper = styled.div`\n    display: flex;\n    align-items: center;\n`;\nconst GenreName = styled.p`\n    padding: 0;\n    margin-right: 10px;\n\n`;\n\nexport { WrapperDetailsInfMovie, BtnGoBack, ContainerInfMovie, YearReleseMovie, TitleHeadDetails, TitleWrapper, GenresWrapper, GenreName  };","import { useState } from \"react\";\nimport { useParams, useNavigate, useLocation, NavLink, Outlet } from \"react-router-dom\";\nimport { fetchOneMovie } from \"components/fetch\";\nimport { useEffect } from \"react\";\nimport { ThreeDots } from 'react-loader-spinner';\nimport { WrapperDetailsInfMovie } from \"./SingleMovieStyled\";\nimport { BtnGoBack, ContainerInfMovie, YearReleseMovie, TitleHeadDetails, TitleWrapper, GenresWrapper, GenreName  } from \"./SingleMovieStyled\";\n\nexport default function SingleMoviePage() {\n    const [state, setState] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [genresList, setGenresList] = useState([]);\n\n    const { id } = useParams();\n    const location = useLocation();\n   \n    const isCastPage = location.pathname.includes('cast');\n    const castLink = isCastPage ? `/movies/${id}` : `/movies/${id}/cast`;\n    const isReviews = location.pathname.includes('reviews');\n    const reviewsLink = isReviews ? `/movies/${id}` : `/movies/${id}/reviews`;\n\n    const navigate = useNavigate('/');\n    const imageURL = 'https://image.tmdb.org/t/p/w500';\n\n    useEffect(() => {\n        const fetchInfMovie = async () => {\n            setLoading(true);\n            try {\n                const movieDetails = await fetchOneMovie(id);\n                const genres = movieDetails.genres.map(({ name, id }) => (<GenreName key={id}>{name}</GenreName>));\n                setState(movieDetails);\n                setGenresList(genres);\n            } catch (error) {\n                setError(error);\n            } finally {\n                setLoading(false);\n            }\n        }\n        fetchInfMovie();  \n    }, [id]);\n\n    const goBackHomePage = () => navigate('/');\n    const goBackMoviesPage = () => navigate('/movies');\n\n    return (\n        <div>\n            <BtnGoBack type=\"button\" onClick={goBackHomePage}>Go back HOME</BtnGoBack>\n            <BtnGoBack type=\"button\" onClick={goBackMoviesPage}>Go back to MOVIES</BtnGoBack>\n             {loading &&    <ThreeDots \n                                height=\"90\" \n                                width=\"90\" \n                                radius=\"10\"\n                                color=\"#674aaa\" \n                                ariaLabel=\"three-dots-loading\"\n                                wrapperStyle={{}}\n                                wrapperClassName=\"\"\n                                visible={true}\n                            />}\n            {error && <p>Something went wrong. Try later, please.</p>}\n            {state && (<>\n                <WrapperDetailsInfMovie>\n                    <img src={`${imageURL}${state.poster_path}`} alt={state.tagline} width='300' height='370' />\n                    <ContainerInfMovie>\n                        <TitleWrapper>\n                            <h2>{state.title ? state.title : state.name}</h2>\n                            <YearReleseMovie>({state.release_date.substr(0, 4)})</YearReleseMovie>\n                        </TitleWrapper>\n                        <TitleHeadDetails>User score:</TitleHeadDetails>\n                        <p>{Math.round(state.vote_average * 10)} %</p>\n                        <TitleHeadDetails>Overview</TitleHeadDetails>\n                        <p>{state.overview}</p>\n                        <TitleHeadDetails>Genres</TitleHeadDetails>\n                        <GenresWrapper>{genresList}</GenresWrapper>\n                    </ContainerInfMovie>\n                </WrapperDetailsInfMovie>\n                <h2>Additional information</h2>\n                <ul>\n                    <li>\n                        <NavLink to={castLink}>Cast</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={reviewsLink}>Reviews</NavLink>\n                    </li>\n                </ul>\n                <Outlet />\n            </>)}\n        </div>\n    )\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["BASE_URL","myAPIkey","fetchRequest","page","axios","response","data","fetchOneMovie","id","fetchMovieByName","searchName","currentPage","fetchActorsMovie","fetchReviews","WrapperDetailsInfMovie","styled","BtnGoBack","ContainerInfMovie","YearReleseMovie","TitleHeadDetails","TitleWrapper","GenresWrapper","GenreName","SingleMoviePage","useState","state","setState","loading","setLoading","error","setError","genresList","setGenresList","useParams","location","useLocation","castLink","pathname","includes","reviewsLink","navigate","useNavigate","useEffect","fetchInfMovie","movieDetails","genres","map","name","type","onClick","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","src","poster_path","alt","tagline","title","release_date","substr","Math","round","vote_average","overview","to","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}