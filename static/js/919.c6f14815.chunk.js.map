{"version":3,"file":"static/js/919.c6f14815.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/MoviesList/MoviesTrendStyled.js","components/fetch.jsx","hooks/usePrevious.jsx","components/MoviesList/MovieGalleryStyled.js","components/MoviesList/Search.jsx","components/MoviesList/MovieGallery.jsx","components/pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nimport { TrendMovieList, TrendMovieListItem } from \"./MoviesTrendStyled\";\n\nexport default function MoviesList({ moviesItems }) {\n    \n    const elements = moviesItems.map(({ id, title, name }) => {\n        return ((<TrendMovieListItem key={id}>\n            <Link to={`/movies/${id}`}>\n                <p>{title ? title : name}</p>\n            </Link>\n    </TrendMovieListItem>\n    ))\n    }\n    );\n    return (<TrendMovieList>{elements}</TrendMovieList>);\n}\n\nMoviesList.propTypes = {\n    moviesItems: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string,\n            name: PropTypes.string,\n        })\n    )\n}","import styled from 'styled-components';\n\nconst TitleTrendMovies = styled.h2`\n    font-size: 28px;                                                                        \n    color: #8B4513;\n    text-shadow: 1px 1px 2px #BC8F8F;\n    text-transform: uppercase;\n`;\nconst TrendMovieList = styled.ul`\n    margin: 0;\n`;\nconst TrendMovieListItem = styled.li`\n    padding: 0;\n    margin: 0;\n    line-height: 1;\n`;\n\nconst BtnLoadMoreMovies = styled.button`\n    background-color: #F4A460;\n    border-radius: 12px;\n    border: transparent;\n    color: #000;\n    cursor: pointer;\n    font-weight: bold;\n    padding: 10px 15px;\n    text-align: center;\n    transition: 200ms;\n    width: 150px;\n\n    &:hover,\n    &:focus {\n        outline: 0;\n        border-color: #808080;\n        background: #BC8F8F;\n        box-shadow: 0 0 0 2px rgba(0,0,0,.2), 0 3px 8px 0 rgba(0,0,0,.15);\n}`\nexport { TitleTrendMovies, BtnLoadMoreMovies, TrendMovieList, TrendMovieListItem };","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst myAPIkey = 'd53b112a09092033b6a356e57b991833';\n\nconst fetchRequest = async (page) => {\n    const response = await axios.get(`${BASE_URL}trending/all/day?api_key=${myAPIkey}&page=${page}`);\n    return response.data;\n}\n\nconst fetchOneMovie = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${myAPIkey}&language=en-US`);\n    return response.data;\n\n}\n\nconst fetchMovieByName = async (searchName, currentPage) => {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${myAPIkey}&language=en-US&page=1&include_adult=false&query=${searchName}&page=${currentPage}`);\n    return response.data;\n}\n\nconst fetchActorsMovie = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${myAPIkey}&language=en-US`);\n    return response.data;\n}\n\nconst fetchReviews = async (id) => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${myAPIkey}&language=en-US&page=1`);\n    return response.data;\n}\n\nexport { fetchRequest, fetchOneMovie, fetchMovieByName, fetchActorsMovie, fetchReviews };\n\n","import { useEffect, useRef } from 'react';\n\n\nexport default function usePrevious(value) {\n        const ref = useRef();\n        useEffect(() => {\n            ref.current = value;\n        });\n        return ref.current;\n    };\n","import styled from 'styled-components';\n\nconst AlertEnterQuery = styled.p`\n    text-align: center;\n    font-size: 22px;\n`;\nconst SearchForm = styled.form`\n    font-size: 22px;\n    text-align: center;\n`;\n\nconst InputForm = styled.input`\n    padding: 5px;\n    font-size: 22px;\n    border-radius: 10px;\n`;\nconst ButtonForm = styled.button`\n    margin-left: 15px;\n    background-color: burlywood;\n    color: plum;\n    font-size: 16px;\n    padding: 10px 20px;\n    border: none;\n    cursor: pointer;\n    border-radius: 10px;\n    text-align: center;\n`;\n\nexport { SearchForm, InputForm, ButtonForm, AlertEnterQuery};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchForm, InputForm, ButtonForm } from './MovieGalleryStyled';\n\nexport default function Search({ onSubmit }) {\n    const [searchName, setSearchName] = useState('');\n   \n    const hendleChangeInputSearch = (e) => {\n        const { value } = e.target;\n        setSearchName(value);\n    }\n    const hendleSubmitSearchForm = (e) => {\n        e.preventDefault();\n        if (searchName.trim() === '') {\n            alert(\"Enter your request, please!\");\n        }\n        onSubmit(searchName);\n         setSearchName('');\n    }\n    \n    return (\n        <header>\n            <SearchForm onSubmit={hendleSubmitSearchForm}>                \n                <InputForm\n                onChange={hendleChangeInputSearch}\n                name=\"searchName\"\n                value={searchName}\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search images and photos\"\n                />\n                <ButtonForm type=\"submit\" className=\"button\">\n                    <span>Search</span>\n                </ButtonForm>\n            </SearchForm>\n        </header>)\n}\n    \nSearch.propTypes = {\n    onSubmit:  PropTypes.func.isRequired,\n}","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ThreeDots } from 'react-loader-spinner';\nimport usePrevious from 'hooks/usePrevious';\nimport { fetchMovieByName } from 'components/fetch';\nimport Search from './Search';\nimport MoviesList from './MoviesList';\nimport { AlertEnterQuery } from './MovieGalleryStyled';\nimport { BtnLoadMoreMovies } from './MoviesTrendStyled';\n\nexport default function MovieGallery() {\n    const [movies, setMovies] = useState(JSON.parse(localStorage.getItem('listmovies')) ?? []);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [page, setPage] = useState(1);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchQuery = searchParams.get('searchQuery');\n \n    const prevPage = usePrevious(page);\n    const prevSearchName = usePrevious(searchQuery);\n\n    useEffect(() => {\n    window.localStorage.setItem('listmovies', JSON.stringify(movies));\n    }, [movies]);\n    \n    useEffect(() => {\n        const fetchMovie = async () => {\n            setLoading(true);\n            try {\n                const result = await fetchMovieByName(searchQuery, page);\n                const items = result.results;\n                if (items.length === 0) {\n                    return alert(\"Any images not found! Try again, please.\");\n                } if (page === 1) {\n                    setMovies([...items]);\n                } else {\n                    setMovies((prev) => [...prev, ...items]);\n                }    \n            } catch (error) {\n                setError(error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        if (!searchQuery) {\n            return;\n        }       \n        if (page > prevPage) {\n            fetchMovie(searchQuery, page);\n            return;\n        }\n        if ((prevSearchName !== searchQuery) && page === prevPage) {\n            fetchMovie(searchQuery, 1);\n            resetPage();\n            return;\n        }\n        }, [searchQuery, page, prevPage, prevSearchName]);\n    \n    const resetPage = () => {\n        setPage(1);\n    }\n\n    const handleSubmitSearchForm = searchName => {\n        setSearchParams({ searchQuery: searchName });\n    };\n\n    const loadMore = () => {\n        setPage((prev) => prev + 1);\n    };\n\n    const isMovies = Boolean(movies.length);\n        return (\n            <div>\n                <AlertEnterQuery>Enter your query, please.</AlertEnterQuery>\n                <Search onSubmit={handleSubmitSearchForm} />\n                {loading ? <ThreeDots \n                                height=\"80\" \n                                width=\"80\" \n                                radius=\"9\"\n                                color=\"#4fa94d\" \n                                ariaLabel=\"three-dots-loading\"\n                                wrapperStyle={{}}\n                                wrapperClassName=\"\"\n                                visible={true}\n                                /> : <p></p>}\n                {error && <p>'Try later, please.'</p>}\n                {movies && <MoviesList moviesItems={movies} />}    \n                {isMovies && <BtnLoadMoreMovies type=\"button\" onClick={loadMore}>Load more...</BtnLoadMoreMovies>}\n            </div>\n        )\n    }","import MovieGallery from \"components/MoviesList/MovieGallery\"\n\nexport default function Movies() {\n    return (\n        <>\n            <MovieGallery />\n        </>\n    )\n}\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["MoviesList","elements","moviesItems","map","id","title","name","to","TitleTrendMovies","styled","TrendMovieList","TrendMovieListItem","BtnLoadMoreMovies","BASE_URL","myAPIkey","fetchRequest","page","axios","response","data","fetchOneMovie","fetchMovieByName","searchName","currentPage","fetchActorsMovie","fetchReviews","usePrevious","value","ref","useRef","useEffect","current","AlertEnterQuery","SearchForm","InputForm","ButtonForm","Search","onSubmit","useState","setSearchName","e","preventDefault","trim","alert","onChange","target","type","autoComplete","autoFocus","placeholder","className","MovieGallery","JSON","parse","localStorage","getItem","movies","setMovies","loading","setLoading","error","setError","setPage","useSearchParams","searchParams","setSearchParams","searchQuery","get","prevPage","prevSearchName","window","setItem","stringify","fetchMovie","result","items","results","length","prev","resetPage","isMovies","Boolean","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","onClick","Movies","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties"],"sourceRoot":""}